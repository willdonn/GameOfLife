package Board;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.SwingUtilities;

public class BoardController implements ActionListener {

	private BoardModel model;
	private BoardPanel view;
	private Runnable simulate;
	private boolean runSimulation = false;
	

	public BoardController(BoardModel model, BoardPanel view) {
		this.model = model;
		this.view = view;
		this.simulate = new Runnable() {

			@Override
			public void run() {
				try {
					Thread.sleep(500);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				view.repaint();
				
				if (runSimulation) {
					SwingUtilities.invokeLater(simulate);
				}
				
			}
		};
		
		mapActions();
	}
	
	private void mapActions() {
		this.view.getPlayPauseButton().addActionListener(this);
		this.view.getRestartButton().addActionListener(this);
	}
	
	private void restartSimulation() {
		model.reset();
		view.repaint();
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		if (e.getSource() == view.getPlayPauseButton()) {
			if (!runSimulation) {
				view.getPlayPauseButton().setText("Pause");
				runSimulation = true;
				SwingUtilities.invokeLater(simulate);
			}
				
			else {
				view.getPlayPauseButton().setText("Play");
				runSimulation = false;
			}
			
		}
		
		else if (e.getSource() == view.getRestartButton()) {
			runSimulation = false;
			view.getPlayPauseButton().setName("Play");
			restartSimulation();
		}
	}
}